{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","negociacao","getConnection","then","connection","dao","adiciona","catch","erro","console","log","Error","listaTodos","apagaTodos","listaAtual","obterNegociacoes","negociacoes","filter","some","isEquals","negociacaoExistente","get","map","obj","Date","data","quantidade","valor","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n\tconstructor() {\n\n\t\tthis._http = new HttpService();\n\t}\n\n\tcadastra(negociacao) {\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then((connection) => new NegociacaoDao(connection))\n\t\t\t.then((dao) => dao.adiciona(negociacao))\n\t\t\t.then(() => 'Negociação adicionada com sucesso')\n\t\t\t.catch((erro) => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível adicionar a negociação');\n\t\t\t});\n\t}\n\n\tlista() {\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then((connection) => new NegociacaoDao(connection))\n\t\t\t.then((dao) => dao.listaTodos())\n\t\t\t.catch((erro) => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível listar as negociações');\n\t\t\t});\n\t}\n\n\tlimpa() {\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then((connection) => new NegociacaoDao(connection))\n\t\t\t.then((dao) => dao.apagaTodos())\n\t\t\t.then(() => 'Negociações apagadas com sucesso')\n\t\t\t.catch((erro) => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível apagar as negociações')\n\t\t\t});\n\t}\n\n\timporta(listaAtual) {\n\n\t\treturn this.obterNegociacoes()\n\t\t\t.then((negociacoes) =>\n\t\t\t\tnegociacoes.filter((negociacao) =>\n\t\t\t\t\t!listaAtual.some(negociacaoExistente =>\n\t\t\t\t\t\tnegociacao.isEquals(negociacaoExistente)))\n\t\t\t)\n\t\t\t.catch((erro) => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível buscar as negociações para importar');\n\t\t\t});\n\t}\n\n\tobterNegociacoesDaSemana() {\n\n\t\treturn this._http\n\t\t\t.get('negociacoes/semana')\n\t\t\t.then((negociacoes) => {\n\t\t\t\treturn negociacoes.map((obj) => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor));\n\t\t\t})\n\t\t\t.catch((erro) => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana');\n\t\t\t});\n\t}\n\n\tobterNegociacoesDaSemanaAnterior() {\n\n\t\treturn this._http\n\t\t\t.get('negociacoes/anterior')\n\t\t\t.then((negociacoes) => {\n\t\t\t\treturn negociacoes.map((obj) => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor));\n\t\t\t})\n\t\t\t.catch((erro) => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana anterior');\n\t\t\t});\n\t}\n\n\tobterNegociacoesDaSemanaRetrasada() {\n\n\t\treturn this._http\n\t\t\t.get('negociacoes/retrasada')\n\t\t\t.then((negociacoes) => {\n\t\t\t\treturn negociacoes.map((obj) => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor));\n\t\t\t})\n\t\t\t.catch((erro) => {\n\t\t\t\tconsole.log(erro);\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana retrasada');\n\t\t\t});\n\t}\n\n\tobterNegociacoes() {\n\n\t\treturn Promise.all([\n\t\t\tthis.obterNegociacoesDaSemana(),\n\t\t\tthis.obterNegociacoesDaSemanaAnterior(),\n\t\t\tthis.obterNegociacoesDaSemanaRetrasada()\n\t\t])\n\t\t\t.then((periodos) => {\n\t\t\t\tlet negociacoes = periodos\n\t\t\t\t\t.reduce((dados, periodo) => dados.concat(periodo), []);\n\n\t\t\t\treturn negociacoes;\n\t\t\t})\n\t\t\t.catch((erro) => {\n\t\t\t\tthrow new Error(erro)\n\t\t\t});\n\t}\n}"]}