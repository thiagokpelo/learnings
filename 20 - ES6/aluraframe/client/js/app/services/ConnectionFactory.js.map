{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["stores","version","dbName","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","e","_createStores","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","store","objectStoreNames","contains","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;AAAA,IAAMA,SAAS,CAAC,aAAD,CAAf;AACA,IAAMC,UAAU,CAAhB;AACA,IAAMC,SAAS,YAAf;;AAEA,IAAIC,aAAa,IAAjB;AACA,IAAIC,QAAQ,IAAZ;;IAEaC,iB,WAAAA,iB;AAEZ,8BAAc;AAAA;;AAEb,QAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACA;;;;kCAEsB;;AAEtB,UAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEvC,QAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBX,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAS,gBAAYI,eAAZ,GAA8B,UAACC,CAAD,EAAO;;AAEpCV,uBAAkBW,aAAlB,CAAgCD,EAAEE,MAAF,CAASC,MAAzC;AACA,KAHD;;AAKAR,gBAAYS,SAAZ,GAAwB,UAACJ,CAAD,EAAO;;AAE9B,SAAI,CAACZ,UAAL,EAAiB;AAChBA,mBAAaY,EAAEE,MAAF,CAASC,MAAtB;AACAd,cAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;AACAA,iBAAWC,KAAX,GAAmB,YAAY;AAC9B,aAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACA,OAFD;AAGA;;AAEDE,aAAQL,UAAR;AACA,KAXD;;AAaAO,gBAAYW,OAAZ,GAAsB,UAACN,CAAD,EAAO;;AAE5BO,aAAQC,GAAR,CAAYR,EAAEE,MAAF,CAASO,KAArB;AACAf,YAAOM,EAAEE,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACA,KAJD;AAMA,IA5BM,CAAP;AA6BA;;;gCAEoBtB,U,EAAY;;AAEhCH,UAAO0B,OAAP,CAAe,UAACC,KAAD,EAAW;;AAEzB,QAAIxB,WAAWyB,gBAAX,CAA4BC,QAA5B,CAAqCF,KAArC,CAAJ,EACCxB,WAAW2B,iBAAX,CAA6BH,KAA7B;;AAEDxB,eAAW4B,iBAAX,CAA6BJ,KAA7B,EAAoC,EAAEK,eAAe,IAAjB,EAApC;AACA,IAND;AAOA;;;oCAEwB;;AAExB,OAAI7B,UAAJ,EAAgB;AACfC;AACAD,iBAAa,IAAb;AACA;AACD","file":"ConnectionFactory.js","sourcesContent":["const stores = ['negociacoes'];\nconst version = 4;\nconst dbName = 'aluraframe';\n\nlet connection = null;\nlet close = null;\n\nexport class ConnectionFactory {\n\n\tconstructor() {\n\n\t\tthrow new Error('Não é possível criar instancias de ConnectionFactory');\n\t}\n\n\tstatic getConnection() {\n\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tlet openRequest = window.indexedDB.open(dbName, version);\n\n\t\t\topenRequest.onupgradeneeded = (e) => {\n\n\t\t\t\tConnectionFactory._createStores(e.target.result);\n\t\t\t};\n\n\t\t\topenRequest.onsuccess = (e) => {\n\n\t\t\t\tif (!connection) {\n\t\t\t\t\tconnection = e.target.result;\n\t\t\t\t\tclose = connection.close.bind(connection);\n\t\t\t\t\tconnection.close = function () {\n\t\t\t\t\t\tthrow new Error('Você não pode fechar diretamente a conexão.');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolve(connection);\n\t\t\t};\n\n\t\t\topenRequest.onerror = (e) => {\n\n\t\t\t\tconsole.log(e.target.error);\n\t\t\t\treject(e.target.error.name);\n\t\t\t};\n\n\t\t});\n\t}\n\n\tstatic _createStores(connection) {\n\n\t\tstores.forEach((store) => {\n\n\t\t\tif (connection.objectStoreNames.contains(store))\n\t\t\t\tconnection.deleteObjectStore(store);\n\n\t\t\tconnection.createObjectStore(store, { autoIncrement: true });\n\t\t});\n\t}\n\n\tstatic closeConnection() {\n\n\t\tif (connection) {\n\t\t\tclose();\n\t\t\tconnection = null;\n\t\t}\n\t}\n}"]}